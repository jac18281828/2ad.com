FROM debian:stable-slim AS go-builder
# defined from build kit
# DOCKER_BUILDKIT=1 docker build . -t ...
ARG TARGETARCH

RUN export DEBIAN_FRONTEND=noninteractive && \
    apt update && \
    apt install -y -q --no-install-recommends \
    git curl gnupg2 build-essential coreutils \
    openssl libssl-dev pkg-config \
    ca-certificates apt-transport-https \
    python3 && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

## Go Lang
ARG GO_VERSION=1.22.4
ADD https://go.dev/dl/go${GO_VERSION}.linux-$TARGETARCH.tar.gz /goinstall/go${GO_VERSION}.linux-$TARGETARCH.tar.gz
RUN echo 'SHA256 of this go source package...'
RUN cat /goinstall/go${GO_VERSION}.linux-$TARGETARCH.tar.gz | sha256sum 
RUN tar -C /usr/local -xzf /goinstall/go${GO_VERSION}.linux-$TARGETARCH.tar.gz
ENV PATH=$PATH:/usr/local/go/bin
RUN go version

## Yaml Format
WORKDIR /yamlfmt
ENV GOBIN=/usr/local/go/bin
ENV PATH=$PATH:${GOBIN}
RUN go install github.com/google/yamlfmt/cmd/yamlfmt@latest
RUN ls -lR /usr/local/go/bin/yamlfmt && strip /usr/local/go/bin/yamlfmt && ls -lR /usr/local/go/bin/yamlfmt
RUN yamlfmt --version

FROM ghcr.io/jac18281828/tsdev:latest

# need python for pelican
RUN export DEBIAN_FRONTEND=noninteractive && \
  apt update && \
  apt install -y -q --no-install-recommends \
  python3 python3-pip && \
  apt clean && \
  rm -rf /var/lib/apt/lists/*

# GO LANG
COPY --from=go-builder /usr/local/go /usr/local/go

ARG PROJECT=2ad.com
WORKDIR /workspaces/${PROJECT}

COPY package.json .
RUN yarn install --dev --frozen-lockfile

COPY . .
RUN chown -R tsdev:tsdev .
USER tsdev
ENV PATH=${PATH}:/usr/local/go/bin

RUN yamlfmt -lint .github/*.yml .github/workflows/*.yml

RUN yarn prettier:check
RUN yarn lint
RUN yarn build
RUN yarn test

CMD ["yarn", "cdk", "synth"]

LABEL org.label-schema.name="aws2ad" \
    org.label-schema.description="2ad aws cdk deployment image" \
    org.label-schema.url="https://github.com/jac18281828/2ad.com" \
    org.label-schema.vcs-url="git@github.com:jac18281828/2ad.com.git" \
    org.label-schema.vendor="John Cairns" \
    org.label-schema.schema-version="1.0" \
    org.opencontainers.image.description="2ad aws cdk deployment image"
