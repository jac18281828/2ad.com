# Stage 1: Build yamlfmt
FROM golang:1 AS go-builder
# defined from build kit
# DOCKER_BUILDKIT=1 docker build . -t ...
ARG TARGETARCH

# Install yamlfmt
WORKDIR /yamlfmt
RUN go install github.com/google/yamlfmt/cmd/yamlfmt@latest && \
    strip $(which yamlfmt) && \
    yamlfmt --version

# Stage 2: CDK Build
FROM ghcr.io/jac18281828/tsdev:latest

# need python for pelican
RUN export DEBIAN_FRONTEND=noninteractive && \
  apt update && \
  apt install -y -q --no-install-recommends \
  python3 python3-pip unzip && \
  apt clean && \
  rm -rf /var/lib/apt/lists/*

# GO LANG
COPY --chown=${USER}:${USER} --from=go-builder /go/bin/yamlfmt /go/bin/yamlfmt

ARG PROJECT=2ad.com
WORKDIR /workspaces/${PROJECT}

COPY package.json .
RUN yarn install --dev --frozen-lockfile

COPY . .
RUN chown -R tsdev:tsdev .
USER tsdev
ENV PATH=${PATH}:/go/bin

# Install Bun
ADD --chown=${USER}:${USER} --chmod=555 https://bun.sh/install /bun/install.sh

RUN /bun/install.sh && \
    sudo rm -rf /bun

CMD ["bun", "run", "cdk", "synth"]

LABEL org.label-schema.name="aws2ad" \
    org.label-schema.description="2ad aws cdk deployment image" \
    org.label-schema.url="https://github.com/jac18281828/2ad.com" \
    org.label-schema.vcs-url="git@github.com:jac18281828/2ad.com.git" \
    org.label-schema.vendor="John Cairns" \
    org.label-schema.schema-version="1.0" \
    org.opencontainers.image.description="2ad aws cdk deployment image"
